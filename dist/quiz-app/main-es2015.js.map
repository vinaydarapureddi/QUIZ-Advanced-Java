{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/api.service.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/question-answer-form/question-answer-form.component.ts","./src/app/components/question-answer-form/question-answer-form.component.html","./src/app/datamodel/answer.ts","./src/app/services/exam.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Http } from '@angular/http';\r\n\r\n\r\nconst API_URL = environment.apiUrl;\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(\r\n        private http: Http\r\n        ) { }\r\n\r\n    getAllQuestin(){\r\n        return this.http\r\n                .get(API_URL + 'getAllQuestions');\r\n               \r\n    }\r\n\r\n    submitAnswers(data:any){\r\n        return this.http\r\n        .post(API_URL + 'submitAnswers',data);\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quiz-app';\n}\n","<app-question-answer-form></app-question-answer-form>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { QuestionAnswerFormComponent } from './components/question-answer-form/question-answer-form.component';\nimport { ApiService } from './api.service';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionAnswerFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule,\n    HttpClientModule,\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Answer } from 'src/app/datamodel/answer';\nimport { ExamService } from 'src/app/services/exam.service';\nimport { ApiService } from 'src/app/api.service';\n\n@Component({\n  selector: 'app-question-answer-form',\n  templateUrl: './question-answer-form.component.html',\n  styleUrls: ['./question-answer-form.component.css']\n})\nexport class QuestionAnswerFormComponent implements OnInit {\n\n  answer : Answer = new Answer(\"text\");\n  questions:any;\n  constructor(private examService : ExamService, public apiService:ApiService) { }\n\n  ngOnInit(): void {\n    this.getAllQuestions();\n  }\n\n  show(){\n    alert(this.answer.content);\n  }\n\n  save(){\n    this.examService.save(this.answer);\n  }\n\n  getAllQuestions(){\n    this.apiService.getAllQuestin().subscribe(\n      data => {\n        console.log(data);\n        this.questions = JSON.parse(data['_body'])\n      }\n  ); \n  }\n\n  submitAnswers(){\n    let requestObj = {};\n    requestObj['userId'] = 'abcd';\n    let answersArr = [];\n    for(let i=0;i<this.questions.length;i++){\n      let question = this.questions[i];\n      let element = document.querySelector('input[name=\"'+question.id+'\"]:checked');\n      let answerSelected = document.querySelector('input[name=\"'+question.id+'\"]:checked')['value'];\n      let correctanswer = this.getCorrectAnswer(question.answers);\n      if(correctanswer != answerSelected){\n        let idtoshow = \"wrongansmsg\"+question.id;\n        document.getElementById(idtoshow).style.display=\"block\";\n      } else {\n          let idtoshow = \"correctansmsg\"+question.id;\n          document.getElementById(idtoshow).style.display=\"block\";\n      }\n      answersArr.push({'questionId':question.id, 'question':question.title, 'answerId':answerSelected});\n    }\n    return false;\n  //   requestObj['questionAnswers'] = answersArr;\n  //   this.apiService.submitAnswers(requestObj).subscribe(\n  //     data => {\n  //       console.log(data);\n  //       alert('Successfully submitted');\n  //     }\n  // ); \n  }\n  getCorrectAnswer(arr){\n    for(let i=0;i<arr.length;i++){\n      if(arr[i].isCorrectAnswer == 1){\n        return arr[i]['id'];\n      }\n    }\n  }\n\n}\n","<div *ngFor=\"let question of questions\">\n    <p><b>{{question.title}}</b></p>\n     <div *ngFor=\"let answer of question.answers\">\n    <input type=\"radio\" id=\"male\" name=\"gender\" value=\"{{answer.id}}\" name=\"{{question.id}}\">\n    <label for=\"male\">{{answer.content}}</label><br>\n    </div>\n    <label style=\"color:red; display:none\" id=\"ansmsg{{question.id}}\">Wrong Answer</label>\n    <label style=\"color:green; display:none\" id=\"ansmsg{{question.id}}\">Correct Answer</label>\n</div>\n\n<button class=\"button primary\" (click)=\"submitAnswers()\">Submit</button>\n","export class Answer {\n \n    content :string;\n \n    constructor(content : string){\n        this.content = content;\n    }\n \n \n \n}","import { Injectable } from '@angular/core';\nimport { Answer } from '../datamodel/answer';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n  url :string =\"http://localhost:8080/quiz-rest/rest/exam/answer\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  save(answer : Answer){\n    this.httpClient.post(this.url, answer).subscribe((data) =>\n    console.log(data)\n  );\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl:'http://localhost:8080/quiz-rest/exam/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}